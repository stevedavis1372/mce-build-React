export type Event = (a: any) => any;

export interface IEvents {
  onActivate: Event;
  onAddUndo: Event;
  onBeforeAddUndo: Event;
  onBeforeExecCommand: Event;
  onBeforeGetContent: Event;
  onBeforeRenderUI: Event;
  onBeforeSetContent: Event;
  onBeforepaste: Event;
  onBlur: Event;
  onChange: Event;
  onClearUndos: Event;
  onClick: Event;
  onContextmenu: Event;
  onCopy: Event;
  onCut: Event;
  onDblclick: Event;
  onDeactivate: Event;
  onDirty: Event;
  onDrag: Event;
  onDragdrop: Event;
  onDragend: Event;
  onDraggesture: Event;
  onDragover: Event;
  onDrop: Event;
  onExecCommand: Event;
  onFocus: Event;
  onFocusin: Event;
  onFocusout: Event;
  onGetContent: Event;
  onHide: Event;
  onInit: Event;
  onKeydown: Event;
  onKeypress: Event;
  onKeyup: Event;
  onLoadContent: Event;
  onMousedown: Event;
  onMouseenter: Event;
  onMouseleave: Event;
  onMousemove: Event;
  onMouseout: Event;
  onMouseover: Event;
  onMouseup: Event;
  onNodeChange: Event;
  onObjectResizeStart: Event;
  onObjectResized: Event;
  onObjectSelected: Event;
  onPaste: Event;
  onPostProcess: Event;
  onPostRender: Event;
  onPreInit: Event;
  onPreProcess: Event;
  onProgressState: Event;
  onRedo: Event;
  onRemove: Event;
  onReset: Event;
  onSaveContent: Event;
  onSelectionchange: Event;
  onSetAttrib: Event;
  onSetContent: Event;
  onShow: Event;
  onSubmit: Event;
  onUndo: Event;
  onVisualAid: Event;
}
